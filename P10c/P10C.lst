;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26/04/2018 14:41:23
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF5E  	GOTO        188
_interrupt:
;P10C.c,14 :: 		void interrupt(){
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;P10C.c,15 :: 		if(INTCON3.INT1IF){
0x0010	0xA0F0      	BTFSS       INTCON3, 0 
0x0012	0xD005      	BRA         L_interrupt1
;P10C.c,16 :: 		INTCON3.INT1IF = 0;
0x0014	0x90F0      	BCF         INTCON3, 0 
;P10C.c,17 :: 		value -= 0x10;
0x0016	0x0E10      	MOVLW       16
0x0018	0x5E17      	SUBWF       _value, 1 
0x001A	0x0E00      	MOVLW       0
0x001C	0x5A18      	SUBWFB      _value+1, 1 
;P10C.c,18 :: 		}
L_interrupt1:
;P10C.c,19 :: 		if(INTCON.INT0IF){
0x001E	0xA2F2      	BTFSS       INTCON, 1 
0x0020	0xD005      	BRA         L_interrupt2
;P10C.c,20 :: 		INTCON.INT0IF = 0;
0x0022	0x92F2      	BCF         INTCON, 1 
;P10C.c,21 :: 		value += 0x10;
0x0024	0x0E10      	MOVLW       16
0x0026	0x2617      	ADDWF       _value, 1 
0x0028	0x0E00      	MOVLW       0
0x002A	0x2218      	ADDWFC      _value+1, 1 
;P10C.c,22 :: 		}
L_interrupt2:
;P10C.c,23 :: 		convertir();
0x002C	0xD813      	RCALL       _convertir
;P10C.c,24 :: 		delay_us(TIME);
0x002E	0x0E06      	MOVLW       6
0x0030	0x6E0D      	MOVWF       R13, 0
L_interrupt3:
0x0032	0x2E0D      	DECFSZ      R13, 1, 0
0x0034	0xD7FE      	BRA         L_interrupt3
0x0036	0x0000      	NOP
;P10C.c,26 :: 		}
L_end_interrupt:
L__interrupt8:
0x0038	0xF000C016  	MOVFF       22, R0
0x003C	0xF001C015  	MOVFF       21, R1
0x0040	0x0011      	RETFIE      1
; end of _interrupt
_SPI1_Write:
;__Lib_SPI_b10c7.c,79 :: 		
;__Lib_SPI_b10c7.c,82 :: 		
0x0042	0xFFC9C021  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_b10c7.c,83 :: 		
L_SPI1_Write8:
0x0046	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0048	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_b10c7.c,84 :: 		
0x004A	0x0000      	NOP
0x004C	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_b10c7.c,85 :: 		
0x004E	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_b10c7.c,87 :: 		
L_end_SPI1_Write:
0x0052	0x0012      	RETURN      0
; end of _SPI1_Write
_convertir:
;P10C.c,6 :: 		void convertir(){
;P10C.c,7 :: 		PORTC.B0=0;
0x0054	0x9082      	BCF         PORTC, 0 
;P10C.c,8 :: 		SPI1_WRITE( value >> 8);
0x0056	0xF000C018  	MOVFF       _value+1, R0
0x005A	0x0E00      	MOVLW       0
0x005C	0xBE18      	BTFSC       _value+1, 7 
0x005E	0x0EFF      	MOVLW       255
0x0060	0x6E01      	MOVWF       R1 
0x0062	0xF021C000  	MOVFF       R0, FARG_SPI1_Write_data_
0x0066	0xDFED      	RCALL       _SPI1_Write
;P10C.c,9 :: 		delay_us(10);
0x0068	0x0E06      	MOVLW       6
0x006A	0x6E0D      	MOVWF       R13, 0
L_convertir0:
0x006C	0x2E0D      	DECFSZ      R13, 1, 0
0x006E	0xD7FE      	BRA         L_convertir0
0x0070	0x0000      	NOP
;P10C.c,10 :: 		SPI1_WRITE(value);
0x0072	0xF021C017  	MOVFF       _value, FARG_SPI1_Write_data_
0x0076	0xDFE5      	RCALL       _SPI1_Write
;P10C.c,11 :: 		PORTC.B0 = 1;
0x0078	0x8082      	BSF         PORTC, 0 
;P10C.c,12 :: 		}
L_end_convertir:
0x007A	0x0012      	RETURN      0
; end of _convertir
_SPI1_Init:
;__Lib_SPI_b10c7.c,23 :: 		
;__Lib_SPI_b10c7.c,24 :: 		
0x007C	0x0EFF      	MOVLW       _SPI1_Read
0x007E	0x6E1D      	MOVWF       _SPI_Rd_Ptr 
0x0080	0x0EFF      	MOVLW       hi_addr(_SPI1_Read)
0x0082	0x6E1E      	MOVWF       _SPI_Rd_Ptr+1 
0x0084	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x0086	0x6E1F      	MOVWF       _SPI_Rd_Ptr+2 
0x0088	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x008A	0x6E20      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_b10c7.c,25 :: 		
0x008C	0x0E42      	MOVLW       _SPI1_Write
0x008E	0x6E19      	MOVWF       _SPI_Wr_Ptr 
0x0090	0x0E00      	MOVLW       hi_addr(_SPI1_Write)
0x0092	0x6E1A      	MOVWF       _SPI_Wr_Ptr+1 
0x0094	0x0E21      	MOVLW       FARG_SPI1_Write_data_
0x0096	0x6E1B      	MOVWF       _SPI_Wr_Ptr+2 
0x0098	0x0E00      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x009A	0x6E1C      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_b10c7.c,27 :: 		
0x009C	0x9E94      	BCF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_SPI_b10c7.c,28 :: 		
0x009E	0x9293      	BCF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;__Lib_SPI_b10c7.c,29 :: 		
0x00A0	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;__Lib_SPI_b10c7.c,31 :: 		
0x00A2	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_b10c7.c,32 :: 		
0x00A4	0x0E40      	MOVLW       64
0x00A6	0x6EC7      	MOVWF       SSPSTAT 
;__Lib_SPI_b10c7.c,33 :: 		
0x00A8	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_b10c7.c,35 :: 		
L_end_SPI1_Init:
0x00AA	0x0012      	RETURN      0
; end of _SPI1_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00AC	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00AE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00B2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00B4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00B6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00B8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00BA	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00BC	0x6A17      	CLRF        _value 
0x00BE	0x0E3F      	MOVLW       63
0x00C0	0x6E18      	MOVWF       24 
;P10C.c,28 :: 		void main() {
;P10C.c,29 :: 		ADCON1 = 0x07;
0x00C2	0x0E07      	MOVLW       7
0x00C4	0x6EC1      	MOVWF       ADCON1 
;P10C.c,31 :: 		SPI1_INIT();//Inicia el convertidor D/A
0x00C6	0xDFDA      	RCALL       _SPI1_Init
;P10C.c,33 :: 		TRISC = 0;
0x00C8	0x6A94      	CLRF        TRISC 
;P10C.c,34 :: 		TRISB = 0xFF;
0x00CA	0x0EFF      	MOVLW       255
0x00CC	0x6E93      	MOVWF       TRISB 
;P10C.c,35 :: 		INTCON2.B7 = 0;
0x00CE	0x9EF1      	BCF         INTCON2, 7 
;P10C.c,37 :: 		INTCON.INT0IE = 1;
0x00D0	0x88F2      	BSF         INTCON, 4 
;P10C.c,38 :: 		INTCON.INT0IF = 0;
0x00D2	0x92F2      	BCF         INTCON, 1 
;P10C.c,39 :: 		INTCON2.INTEDG0 = 1;
0x00D4	0x8CF1      	BSF         INTCON2, 6 
;P10C.c,41 :: 		INTCON3.INT1IE = 1;
0x00D6	0x86F0      	BSF         INTCON3, 3 
;P10C.c,42 :: 		INTCON3.INT1IF = 0;
0x00D8	0x90F0      	BCF         INTCON3, 0 
;P10C.c,43 :: 		INTCON2.INTEDG1 = 1;
0x00DA	0x8AF1      	BSF         INTCON2, 5 
;P10C.c,45 :: 		INTCON.GIE = 1; //habilitar interrupciones en general
0x00DC	0x8EF2      	BSF         INTCON, 7 
;P10C.c,47 :: 		while(1){
L_main4:
;P10C.c,48 :: 		asm nop;
0x00DE	0x0000      	NOP
;P10C.c,49 :: 		}
0x00E0	0xD7FE      	BRA         L_main4
;P10C.c,50 :: 		}
L_end_main:
0x00E2	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [58]    _interrupt
0x0042      [18]    _SPI1_Write
0x0054      [40]    _convertir
0x007C      [48]    _SPI1_Init
0x00AC      [16]    ___CC2DW
0x00BC      [40]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0017       [2]    _value
0x0019       [4]    _SPI_Wr_Ptr
0x001D       [4]    _SPI_Rd_Ptr
0x0021       [1]    FARG_SPI1_Write_data_
0x0F82       [1]    PORTC
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [1]    TRISC
0x0FC1       [1]    ADCON1
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
