;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/02/2018 10:39:13
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF0E  	GOTO        28
_interrupt:
;P4b.c,4 :: 		void interrupt() //rutina de servicio de interrupciones (MikroC)
;P4b.c,7 :: 		INTCON.INT0IF = 0; // se borra el flag de la interrupción INT0
0x0008	0x92F2      	BCF         INTCON, 1 
;P4b.c,8 :: 		}
L_end_interrupt:
L__interrupt5:
0x000A	0x0011      	RETFIE      1
; end of _interrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x000C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x000E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0012	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0014	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0016	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0018	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x001A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
;P4b.c,10 :: 		void main()
;P4b.c,13 :: 		ADCON1=0x07; //Configuración de los canales analógicos como digitales
0x001C	0x0E07      	MOVLW       7
0x001E	0x6EC1      	MOVWF       ADCON1 
;P4b.c,16 :: 		TRISC=0;   //Terminales RD como salida digital
0x0020	0x6A94      	CLRF        TRISC 
;P4b.c,17 :: 		TRISB.B0=1;
0x0022	0x8093      	BSF         TRISB, 0 
;P4b.c,20 :: 		ADCON1=0x07; //Configuración de los canales analógicos como digitales
0x0024	0x0E07      	MOVLW       7
0x0026	0x6EC1      	MOVWF       ADCON1 
;P4b.c,21 :: 		RBPU_bit=0;
0x0028	0x9EF1      	BCF         RBPU_bit, BitPos(RBPU_bit+0) 
;P4b.c,22 :: 		TRISB.B1=0;
0x002A	0x9293      	BCF         TRISB, 1 
;P4b.c,23 :: 		PORTB.B1=0;
0x002C	0x9281      	BCF         PORTB, 1 
;P4b.c,24 :: 		TRISB.B0 = 1; //se configura RB0 como entrada
0x002E	0x8093      	BSF         TRISB, 0 
;P4b.c,25 :: 		INTCON2.INTEDG0 = 0; //la interrupción la provoca un flanco de subida (x=1)/ bajada (x=0)
0x0030	0x9CF1      	BCF         INTCON2, 6 
;P4b.c,26 :: 		INTCON.INT0IF = 0; // se pone el flag de la interrupción INT0 a 0
0x0032	0x92F2      	BCF         INTCON, 1 
;P4b.c,27 :: 		INTCON.INT0IE = 1; // se habilita la interrupción INT0
0x0034	0x88F2      	BSF         INTCON, 4 
;P4b.c,28 :: 		INTCON.GIE = 1; // se habilitan las interrupciones en general
0x0036	0x8EF2      	BSF         INTCON, 7 
;P4b.c,36 :: 		PORTC.B1=1;
0x0038	0x8282      	BSF         PORTC, 1 
;P4b.c,37 :: 		delay_ms(20); //retardo
0x003A	0x0E34      	MOVLW       52
0x003C	0x6E0C      	MOVWF       R12, 0
0x003E	0x0EF1      	MOVLW       241
0x0040	0x6E0D      	MOVWF       R13, 0
L_main0:
0x0042	0x2E0D      	DECFSZ      R13, 1, 0
0x0044	0xD7FE      	BRA         L_main0
0x0046	0x2E0C      	DECFSZ      R12, 1, 0
0x0048	0xD7FC      	BRA         L_main0
0x004A	0x0000      	NOP
0x004C	0x0000      	NOP
;P4b.c,38 :: 		PORTC.B2=1;
0x004E	0x8482      	BSF         PORTC, 2 
;P4b.c,39 :: 		delay_ms(20); //retardo
0x0050	0x0E34      	MOVLW       52
0x0052	0x6E0C      	MOVWF       R12, 0
0x0054	0x0EF1      	MOVLW       241
0x0056	0x6E0D      	MOVWF       R13, 0
L_main1:
0x0058	0x2E0D      	DECFSZ      R13, 1, 0
0x005A	0xD7FE      	BRA         L_main1
0x005C	0x2E0C      	DECFSZ      R12, 1, 0
0x005E	0xD7FC      	BRA         L_main1
0x0060	0x0000      	NOP
0x0062	0x0000      	NOP
;P4b.c,41 :: 		while(1){//Buble infinito
L_main2:
;P4b.c,42 :: 		}
0x0064	0xD7FF      	BRA         L_main2
;P4b.c,43 :: 		}
L_end_main:
0x0066	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008       [4]    _interrupt
0x000C      [16]    ___CC2DW
0x001C      [76]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [2]    __Lib_FT812_alt_memset_pp_L0
0x0002       [2]    __Lib_FT800_alt_strlen_cp_L0
0x0002       [2]    __Lib_FT800_alt_memset_pp_L0
0x0002       [2]    __Lib_FT810_alt_memcpy_dd_L0
0x0002       [2]    __Lib_FT800_alt_memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    __Lib_FT810_alt_strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    __Lib_FT812_alt_memcpy_dd_L0
0x0002       [2]    __Lib_FT812_alt_strlen_cp_L0
0x0002       [2]    __Lib_FT810_alt_memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0003       [4]    FT800_Canvas_SurrRect_minX_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [4]    FT812_Canvas_SurrRect_minX_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [4]    FT810_Canvas_SurrRect_minX_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0004       [2]    frexp_pom_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [3]    __Lib_FT812_alt_strlen_const_cp_L0
0x0004       [3]    __Lib_FT800_alt_strlen_const_cp_L0
0x0004       [2]    __Lib_FT800_alt_memcpy_ss_L0
0x0004       [1]    R4
0x0004       [3]    __Lib_FT810_alt_strlen_const_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_FT810_alt_memcpy_ss_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_FT812_alt_memcpy_ss_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0007       [4]    FT810_Canvas_SurrRect_minY_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [4]    FT812_Canvas_SurrRect_minY_L0
0x0007       [4]    FT800_Canvas_SurrRect_minY_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [4]    FT800_Canvas_SurrRect_maxX_L0
0x000B       [1]    R11
0x000B       [4]    FT810_Canvas_SurrRect_maxX_L0
0x000B       [4]    FT812_Canvas_SurrRect_maxX_L0
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [4]    FT810_Canvas_SurrRect_maxY_L0
0x000F       [1]    R15
0x000F       [4]    FT812_Canvas_SurrRect_maxY_L0
0x000F       [4]    FT800_Canvas_SurrRect_maxY_L0
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF1       [0]    RBPU_bit
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
